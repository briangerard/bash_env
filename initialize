#!/usr/bin/env bash

shopt -s nocasematch

###
# Import the necessary functions and such
WorkingDir=$(dirname ${BASH_SOURCE[0]})
if [[ -f ${WorkingDir}/.bash_env_mgmt ]]
then
    . ${WorkingDir}/.bash_env_mgmt
    cd $WorkingDir
else
    echo "FATAL: No .bash_env_mgmt in $WorkingDir"
    exit 1
fi

###
# See what's wanted.
if [[ $# -eq 0 ]]
then
    WhatToDo="everything"
else
    for arg in "$@"
    do
        case arg in
            all)    WhatToDo="everything"        ;;
            anyenv) WhatToDo="${WhatToDo}anyenv" ;;
            pyenv)  WhatToDo="${WhatToDo}pyenv"  ;;
            rbenv)  WhatToDo="${WhatToDo}rbenv"  ;;
            plenv)  WhatToDo="${WhatToDo}plenv"  ;;
            goenv)  WhatToDo="${WhatToDo}goenv"  ;;
            *)      echo "Unknown option: $arg"  ;;
        esac
        shift
    done
fi

###
# Find git, which is used in a lot of the rest of the script.
Git=$(which git 2> /dev/null)
if [[ $? -ne 0 ]]
then
    Git="NO_GIT"
    echo "WARNING: No git found in your path."
    echo "WARNING: Will be unable to complete the git dependent portion of the setup."
    echo -n "Continue? [y/N] "
    read yN
    if [[ $yN =~ ^y ]]
    then
        echo "Continuing with non-git actions."
    else
        echo "Exiting."
    fi
fi

# Set up the basic directory structure
bootstrapStandardDirs

# Now get things started.
syncenv local

###
# On to Vundle, anyenv, etc...
#
# ...though we can't really do much of anything without git.
if [[ ${Git:-NO_GIT} != "NO_GIT" ]]
then

    ###
    # Assuming we're good to go in .vim land...
    if [[ -d ${HOME}/.vim ]]
    then
        BundleDir="${HOME}/.vim/bundle/Vundle.vim"
        BundleCount=$(/bin/ls -A1 $BundleDir 2> /dev/null | wc -l)
        if [[ -d $BundleDir && $BundleCount -gt 0 ]]
        then
            cd $BundleDir
            $Git pull --rebase
        else
            $Git clone https://github.com/gmarik/Vundle.vim.git ${BundleDir}
        fi

        Vim=$(which vim)
        if [[ $? -eq 0 ]]
        then
            $Vim +PluginInstall +qall
        else
            echo "No vim found - unable to initialize Vundle plugins"
        fi
    else
        echo "WARNING: Bad syncenv?  No ${HOME}/.vim found."
    fi

    ###
    # Anyenv, so I can get all the other goodies.
    # It is required for installing any of the other "env"s as well,
    # so if any of those are requested, anyenv comes along also.
    if [[ $WhatToDo =~ (env|everything) ]]
    then
        declare -f anyenv &> /dev/null
        if [[ $? -ne 0 ]]
        then
            AnyenvDir="${HOME}/.anyenv"
            $Git clone https://github.com/riywo/anyenv $AnyenvDir
            export PATH=${AnyenvDir}/bin:$PATH
            eval "$(anyenv init -)"
        fi
    fi

    ###
    # Ruby: rbenv
    if [[ $WhatToDo =~ (rbenv|everything) ]]
    then
        declare -f rbenv &> /dev/null
        if [[ $? -ne 0 ]]
        then
            anyenv install rbenv
            eval "$(anyenv init -)"

            PreferredRubyVersion=2.1.2
            rbenv install --skip-existing $PreferredRubyVersion
            rbenv global $PreferredRubyVersion
            rbenv rehash

            gem install tmuxinator
        fi
    fi

    ###
    # Perl: plenv
    if [[ $WhatToDo =~ (plenv|everything) ]]
    then
        declare -f plenv &> /dev/null
        if [[ $? -ne 0 ]]
        then
            anyenv install plenv
            eval "$(anyenv init -)"

            PreferredPerlVersion=5.20.1
            plenv install $PreferredPerlVersion
            plenv global $PreferredPerlVersion
            plenv rehash

            plenv install-cpanm
        fi
    fi

    ###
    # Python: pyenv
    if [[ $WhatToDo =~ (pyenv|everything) ]]
    then
        declare -f pyenv &> /dev/null
        if [[ $? -ne 0 ]]
        then
            anyenv install pyenv
            eval "$(anyenv init -)"

            PreferredPythonVersion=2.7.9
            pyenv install $PreferredPythonVersion
            pyenv global $PreferredPythonVersion
            pyenv rehash
        fi
    fi

    ###
    # Go: goenv
    if [[ $WhatToDo =~ (goenv|everything) ]]
    then
        declare -f goenv &> /dev/null
        if [[ $? -ne 0 ]]
        then
            anyenv install goenv
            eval "$(anyenv init -)"

            PreferredGoVersion=1.4.2
            goenv install $PreferredGoVersion
            goenv global $PreferredGoVersion
            goenv rehash
        fi
    fi

else
    echo "No git found - skipping Vundle and anyenv setup."
fi
