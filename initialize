#!/usr/bin/env bash

shopt -s nocasematch

WorkingDir=$(dirname ${BASH_SOURCE[0]})

if [[ -f ${WorkingDir}/.bash_env_mgmt ]]
then
    . ${WorkingDir}/.bash_env_mgmt
    cd $WorkingDir
else
    echo "FATAL: No .bash_env_mgmt in $WorkingDir"
    exit 1
fi

Git=$(which git 2> /dev/null)
if [[ $? -ne 0 ]]
then
    Git="NO_GIT"
    echo "WARNING: No git found in your path."
    echo "WARNING: Will be unable to complete the git dependent portion of the setup."
    echo -n "Continue? [y/N] "
    read yN
    if [[ $yN =~ ^y ]]
    then
        echo "Continuing with non-git actions."
    else
        echo "Exiting."
    fi
fi

# Set up the basic directory structure
bootstrapStandardDirs

# Now get things started.
syncenv local

# Assuming we're good to go in .vim land...
if [[ -d ${HOME}/.vim ]]
then
    if [[ ${Git:-NO_GIT} != "NO_GIT" ]]
    then
        BundleDir="${HOME}/.vim/bundle/Vundle.vim"
        BundleCount=$(/bin/ls -A1 $BundleDir 2> /dev/null | wc -l)
        if [[ -d $BundleDir && $BundleCount -gt 0 ]]
        then
            cd $BundleDir
            $Git pull --rebase
        else
            $Git clone https://github.com/gmarik/Vundle.vim.git ${BundleDir}
        fi

        Vim=$(which vim)
        if [[ $? -eq 0 ]]
        then
            $Vim +PluginInstall +qall
        else
            echo "No vim found - unable to initialize Vundle plugins"
        fi
    else
        echo "No git found - skipping Vundle setup."
    fi
else
    echo "WARNING: Bad syncenv?  No ${HOME}/.vim found."
fi

# Now on to anyenv, etc...
if [[ ${Git:-NO_GIT} != "NO_GIT" ]]
then
    ###
    # Anyenv, so I can get all the other goodies.
    AnyenvDir="${HOME}/.anyenv"
    $Git clone https://github.com/riywo/anyenv $AnyenvDir
    export PATH=${AnyenvDir}/bin:$PATH
    eval "$(anyenv init -)"

    ###
    # Ruby: rbenv
    anyenv install rbenv
    eval "$(anyenv init -)"

    PreferredRubyVersion=2.1.2
    rbenv install --skip-existing $PreferredRubyVersion
    rbenv global $PreferredRubyVersion
    rbenv rehash

    gem install tmuxinator

    ###
    # Perl: plenv
    anyenv install plenv
    eval "$(anyenv init -)"

    PreferredPerlVersion=5.20.1
    plenv install $PreferredPerlVersion
    plenv global $PreferredPerlVersion
    plenv rehash

    plenv install-cpanm

else
    echo "No git found - skipping anyenv setup."
fi
